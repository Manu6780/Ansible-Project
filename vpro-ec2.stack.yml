- name: setup Vprofie Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup variables
      include_vars: Vars/output
    - name: import vprofile setup variables
      include_vars: Vars/vprofilestack
    - name: import VPC variable
      include_vars: Vars/VPC_vars

    - name: Create Key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: keyout
    - name: copy key to a file
      copy:
        content: "{{keyout.key.private_key}}"
        dest: "./vprostack.pem"
        mode: 0600
      when: keyout.changed
    - name: Create security group for lb
      ec2_group:
        name: Vprolb-sg
        description: allow port 80 from anywhere
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: Vprolb_sgout


    - name: Create security group for vprofile stack
      ec2_group:
        name: Vprostack-sg
        description: allow port 80 from anywhere
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{Vprolb_sgout.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGID}}"
      register: Vprostack_sgout
    - name: Create security group for vprofile stack
      ec2_group:
        name: Vprostack-sg
        description: allowed internal traffic
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{Vprostack_sgout.group_id}}"
    - name: create nginx web01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
        group_id: "{{Vprostack_sgout.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: create tomcat app01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomact_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
        group_id: "{{Vprostack_sgout.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: create memcache mem01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mem01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "mem01"
          Project: Vprofile
        group_id: "{{Vprostack_sgout.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mem01_out

    - name: create rmq rmq01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
        group_id: "{{Vprostack_sgout.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: create mysql db01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
        group_id: "{{Vprostack_sgout.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: db01_out.tagged_instances[0].id
    - name: creating load balancer
      local_action:
        module: ec2_elb_lb
        name: vprofile-elb
        region: "{{region}}"
        state: present
        instance_ids:
          - "{{web01_out.tagged_instances[0].id}}"
        purge_instance_ids: true
        security_group_ids: "{{Vprolb_sgout.group_id}}"
        subnets:
          - "{{pubsub1id}}"
          - "{{pubsub1id}}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
    - name: Insert/Update Hosts IP
      blockinfile:
        path: provision-stack/group_vars/hostsip
        block: |
          web01_ip: {{web01_out.tagged_instances[0].private_ip}}
          app01_ip: {{app01_out.tagged_instances[0].private_ip}}
          rmq01_ip: {{rmq01_out.tagged_instances[0].private_ip}}
          mem01_ip: {{mem01_out.tagged_instances[0].private_ip}}
          db01_ip: {{db01_out.tagged_instances[0].private_ip}}

    - name: copy login key to provision-stack
      copy:
         src: vprostack.pem
         dest: provision-stack/vprostack.pem
         mode: 0400
    - name: Insert/Update Inventory file provison-stack
      blockinfile:
          path: provision-stack/inventory-vpro
          block: |
            web01 ansible_host={{web01_out.tagged_instances[0].private_ip}}
            app01 ansible_host={{app01_out.tagged_instances[0].private_ip}}
            rmq01 ansible_host={{rmq01_out.tagged_instances[0].private_ip}}
            mem01 ansible_host={{mem01_out.tagged_instances[0].private_ip}}
            db01  ansible_host={{db01_out.tagged_instances[0].private_ip}}
            cntl  ansible_host=127.0.0.1 ansible_connection=local
            
            
            [websrvrgrp]
            web01
            [appsrvrgrp]
            app01
            [rmqsrvrgrp]
            rmq01
            [memsrvrgrp]
            mem01
            [dbsrvrgrp]
            db01
            [control]
            cntl
            
            [stack_inst:children]
            websrvrgrp
            appsrvrgrp
            rmqsrvrgrp
            memsrvrgrp
            dbsrvrgrp
            
            [stack_inst:vars]
            ansible_user=ubuntu
            ansible_ssh_private_key_file=vprostack.pem
            #ansible_python_interpreter=/usr/bin/python3
